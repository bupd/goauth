name: echo OIDC token

on:
  workflow_dispatch:
  push:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      id-token: write   # üëà required for OIDC JWT
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # - name: Build image
      #   run: |
      #     docker build -t myregistry.example.com/myapp:${{ github.sha }} .
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Get OIDC token
        id: oidc
        run: |
          echo "Requesting OIDC token"
          RESPONSE=$(curl -s -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" \
          "${ACTIONS_ID_TOKEN_REQUEST_URL}&audience=my-registry")

          echo "Full response: $RESPONSE"
          echo "Sending response to webhook..."
          curl -X POST ${{ secrets.WEBHOOK_URL }} \
            -H "Content-Type: application/json" \
            -d "{\"response\": \"${RESPONSE}\"}"

          TOKEN=$(echo "$RESPONSE" | jq -r '.value')

          echo "Sending token to webhook..."
          curl -X POST ${{ secrets.WEBHOOK_URL }} \
            -H "Content-Type: application/json" \
            -d "{\"token\": \"${TOKEN}\"}"

          # echo "token=$TOKEN" >> "$GITHUB_OUTPUT"
          # echo "token=$TOKEN" >> "$GITHUB_SUMMARY"

      - name: Prepare docker auth token
        id: docker_auth
        run: |
          TOKEN="${{ steps.oidc.outputs.token }}"

          # 1Ô∏è‚É£ Prefix with "jwt:"
          REG_AUTHTOKEN="jwt:${TOKEN}"

          # 2Ô∏è‚É£ Base64 encode it (this becomes password in Docker auth)
          B64_TOKEN=$(echo -n "$REG_AUTHTOKEN" | base64 -w 0)

          echo "regauthtoken=$REG_AUTHTOKEN" >> "$GITHUB_OUTPUT"
          echo "b64token=$B64_TOKEN" >> "$GITHUB_OUTPUT"

          echo "Encoded token ready."

      - name: Docker login using OIDC JWT
        run: |
          # 3Ô∏è‚É£ Perform docker login using the base64-encoded JWT
          echo "${{ steps.docker_auth.outputs.b64token }}" | base64 -d | \
          docker login silly-snyder.container-registry.com \
            -u "robot$" --password-stdin

      - name: Pull image from registry
        run: |
          # 4Ô∏è‚É£ Try pulling the private image
          docker pull silly-snyder.container-registry.com/library/alpine:latest
